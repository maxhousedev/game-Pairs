@import './breakpoints.scss';

// media query
@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

// pseudo
@mixin pseudo($display: block, $position: absolute, $content: '\00A0') {
  content: $content;
  display: $display;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  position: $position;
}
// box-sizing: border-box;
@mixin border-box {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin focused {
  outline: 1px solid $accent;
  outline-offset: 2px;
}

// map greayscale
@mixin map-grayscale($amount: 1) {
  [class*='ground-pane'] {
    filter: grayscale($amount);
  }
}

// text ellipsis
@mixin line-clamp($nStr: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $nStr;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
